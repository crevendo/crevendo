// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/data.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Datatype int32

const (
	Datatype_STRING  Datatype = 0
	Datatype_DOUBLE  Datatype = 1
	Datatype_INTEGER Datatype = 2
	Datatype_BOOLEAN Datatype = 3
)

// Enum value maps for Datatype.
var (
	Datatype_name = map[int32]string{
		0: "STRING",
		1: "DOUBLE",
		2: "INTEGER",
		3: "BOOLEAN",
	}
	Datatype_value = map[string]int32{
		"STRING":  0,
		"DOUBLE":  1,
		"INTEGER": 2,
		"BOOLEAN": 3,
	}
)

func (x Datatype) Enum() *Datatype {
	p := new(Datatype)
	*p = x
	return p
}

func (x Datatype) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Datatype) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_data_proto_enumTypes[0].Descriptor()
}

func (Datatype) Type() protoreflect.EnumType {
	return &file_proto_data_proto_enumTypes[0]
}

func (x Datatype) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Datatype.Descriptor instead.
func (Datatype) EnumDescriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{0}
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Type          Datatype               `protobuf:"varint,2,opt,name=type,proto3,enum=Datatype" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_proto_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_proto_data_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Data) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Data) GetType() Datatype {
	if x != nil {
		return x.Type
	}
	return Datatype_STRING
}

var File_proto_data_proto protoreflect.FileDescriptor

const file_proto_data_proto_rawDesc = "" +
	"\n" +
	"\x10proto/data.proto\"M\n" +
	"\x04Data\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x1d\n" +
	"\x04type\x18\x02 \x01(\x0e2\t.DatatypeR\x04type*<\n" +
	"\bDatatype\x12\n" +
	"\n" +
	"\x06STRING\x10\x00\x12\n" +
	"\n" +
	"\x06DOUBLE\x10\x01\x12\v\n" +
	"\aINTEGER\x10\x02\x12\v\n" +
	"\aBOOLEAN\x10\x03B#Z!github.com/crevendo/crevendo/datab\x06proto3"

var (
	file_proto_data_proto_rawDescOnce sync.Once
	file_proto_data_proto_rawDescData []byte
)

func file_proto_data_proto_rawDescGZIP() []byte {
	file_proto_data_proto_rawDescOnce.Do(func() {
		file_proto_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_data_proto_rawDesc), len(file_proto_data_proto_rawDesc)))
	})
	return file_proto_data_proto_rawDescData
}

var file_proto_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_data_proto_goTypes = []any{
	(Datatype)(0), // 0: Datatype
	(*Data)(nil),  // 1: Data
}
var file_proto_data_proto_depIdxs = []int32{
	0, // 0: Data.type:type_name -> Datatype
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_data_proto_init() }
func file_proto_data_proto_init() {
	if File_proto_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_data_proto_rawDesc), len(file_proto_data_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_data_proto_goTypes,
		DependencyIndexes: file_proto_data_proto_depIdxs,
		EnumInfos:         file_proto_data_proto_enumTypes,
		MessageInfos:      file_proto_data_proto_msgTypes,
	}.Build()
	File_proto_data_proto = out.File
	file_proto_data_proto_goTypes = nil
	file_proto_data_proto_depIdxs = nil
}
